{"version":3,"file":"static/js/807.fdf63271.chunk.js","mappings":"iMAEaA,EAAyB,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,SAAUC,EAAa,EAAbA,OACjD,IAAKA,EACH,OAAOD,EAASE,MAGlB,IAAMC,EAAmBF,EAAOG,cAKhC,OAJeJ,EAASE,MAAMD,QAAO,YACnC,OADiD,EAAXI,KAC1BD,cAAcE,SAASH,EACpC,GAGF,EAEYI,EAAwB,SAAC,GAAD,SAAGP,SAAwBQ,SAA3B,ECdrC,EAAuB,0BAAvB,EAA8D,gCAA9D,EAAsG,2BAAtG,EAA0I,4B,mBCI7HC,EAAc,WACzB,IAAIC,EAAc,CAChBL,KAAM,GACNM,OAAQ,IAGJX,GAAWY,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMb,SAASE,KAAnB,IAC5BY,GAAWC,EAAAA,EAAAA,MAEXC,EAAkB,SAAAC,GACtB,IAAMC,EAAYD,EAAEE,OAAOd,KAC3BK,EAAYQ,GAAaD,EAAEE,OAAOC,KAEnC,EAmBD,OACE,kBACEC,UAAWC,EACXC,SAAU,SAAAN,GACRA,EAAEO,iBArBiB,SAAAC,GACvB,IAAMpB,EAAOoB,EAAKpB,KAClB,GAAIL,EAAS0B,MAAK,SAAAC,GAAO,OAAIA,EAAQtB,OAASA,CAArB,IACvBuB,MAAM,GAAD,OAAIvB,EAAJ,gCADP,CAKA,IAAMwB,EAAQJ,EAAKd,OACbmB,GAASC,EAAAA,EAAAA,IAAgB,CAAE1B,KAAAA,EAAMwB,MAAAA,IACvCf,EAASgB,EAJR,CAKF,CAYKE,CAAiBtB,GAVL,SAAAO,GAChBA,EAAEE,OAAOc,SAAS5B,KAAKe,MAAQ,GAC/BH,EAAEE,OAAOc,SAAStB,OAAOS,MAAQ,EAClC,CAQKc,CAAUjB,EACX,EANH,WAQE,mBAAOI,UAAWC,EAAlB,kBAEE,kBACEa,SAAUnB,EACVK,UAAWC,EACXc,KAAK,OACL/B,KAAK,OACLgC,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,QAGZ,mBAAOlB,UAAWC,EAAlB,oBAEE,kBACEa,SAAUnB,EACVK,UAAWC,EACXc,KAAK,MACL/B,KAAK,SACLgC,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,QAGZ,mBAAQlB,UAAWC,EAAec,KAAK,SAAvC,2BAKL,EC1ED,EAAyB,uB,UCDZI,EAAe,SAAC,GAAD,SAAGvC,MAAH,ECOfwC,EAAS,WACpB,IAAMxC,GAASW,EAAAA,EAAAA,IAAY4B,GACrB1B,GAAWC,EAAAA,EAAAA,MAOjB,OACE,mBAAOM,UAAWC,EAAlB,2BAEE,kBAAOc,KAAK,OAAOhB,MAAOnB,EAAQkC,SARjB,SAAAlB,GACnB,IAAMa,GAASY,EAAAA,EAAAA,GAAUzB,EAAEE,OAAOC,OAClCN,EAASgB,EACV,MAQF,E,UCrBD,EAA2B,kCAA3B,EAAsE,gCCMzDa,EAAkB,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,OAAQvC,EAAkB,EAAlBA,KAAMwB,EAAY,EAAZA,MACxCf,GAAWC,EAAAA,EAAAA,MAOjB,OACE,gBAAIM,UAAWC,EAAf,WACE,4BAAOjB,EAAP,QACA,0BAAOwB,KACP,mBACER,UAAWC,EACXuB,QAAS,kBAXa,SAAAC,GAC1B,IAAMhB,GAASiB,EAAAA,EAAAA,IAAmBD,GAClChC,EAASgB,EACV,CAQoBkB,CAAoBJ,EAA1B,EACTR,KAAK,SAHP,sBASL,EC3BD,GAAiB,ECSJa,EAAc,WACzB,IAAMnC,GAAWC,EAAAA,EAAAA,OAEjBmC,EAAAA,EAAAA,YAAU,WACRpC,GAASqC,EAAAA,EAAAA,MACV,GAAE,CAACrC,IAEJ,IAAMsC,GAAOxC,EAAAA,EAAAA,IAAYb,GAEzB,OACE,eAAIsB,UAAWC,EAAAA,GAAf,SACG8B,EAAKC,KAAI,YAA0B,IAAvBP,EAAsB,EAAtBA,GAAIzC,EAAkB,EAAlBA,KAAMwB,EAAY,EAAZA,MACrB,OACE,SAACc,EAAD,CAA0BtC,KAAMA,EAAMwB,MAAOA,EAAOe,OAAQE,GAAtCA,EAEzB,KAGN,E,UCHD,EAhBqB,WAGnB,OAFgBlC,EAAAA,EAAAA,IAAYL,IAGnB,SAAC+C,EAAA,EAAD,KAGP,4BACE,qCACA,SAAC7C,EAAD,KACA,SAACgC,EAAD,KACA,SAACQ,EAAD,MAGL,C","sources":["redux/contacts/contactsSelectors.js","webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","redux/filter/filterSelectors.js","components/Filter/Filter.jsx","webpack://react-homework-template/./src/components/ContactList/ContactListItem/ContactListItem.module.css?fe27","components/ContactList/ContactListItem/ContactListItem.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["export const selectAllContacts = ({ contacts }) => contacts.items;\n\nexport const selectFilteredContacts = ({ contacts, filter }) => {\n  if (!filter) {\n    return contacts.items;\n  }\n\n  const normalizedFilter = filter.toLowerCase();\n  const result = contacts.items.filter(({ name }) => {\n    return name.toLowerCase().includes(normalizedFilter);\n  });\n\n  return result;\n};\n\nexport const selectLoadingContacts = ({ contacts }) => contacts.isLoading;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"inputBlock\":\"ContactForm_inputBlock__exhII\",\"input\":\"ContactForm_input__Bl93P\",\"button\":\"ContactForm_button__eSwX9\"};","import { useSelector, useDispatch } from 'react-redux';\nimport styles from './ContactForm.module.css';\n\nimport { fetchAddContact } from 'redux/contacts/contactsOperations';\n\nexport const ContactForm = () => {\n  let inputValues = {\n    name: '',\n    number: '',\n  };\n\n  const contacts = useSelector(store => store.contacts.items);\n  const dispatch = useDispatch();\n\n  const onChangingInput = e => {\n    const objectKey = e.target.name;\n    inputValues[objectKey] = e.target.value;\n    return;\n  };\n\n  const handleAddContact = data => {\n    const name = data.name;\n    if (contacts.find(contact => contact.name === name)) {\n      alert(`${name} is already in contacts`);\n      return;\n    }\n\n    const phone = data.number;\n    const action = fetchAddContact({ name, phone });\n    dispatch(action);\n  };\n\n  const clearForm = e => {\n    e.target.elements.name.value = '';\n    e.target.elements.number.value = '';\n  };\n\n  return (\n    <form\n      className={styles.form}\n      onSubmit={e => {\n        e.preventDefault();\n        handleAddContact(inputValues);\n        clearForm(e);\n      }}\n    >\n      <label className={styles.inputBlock}>\n        Name\n        <input\n          onChange={onChangingInput}\n          className={styles.input}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n      <label className={styles.inputBlock}>\n        Number\n        <input\n          onChange={onChangingInput}\n          className={styles.input}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </label>\n      <button className={styles.button} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"filter\":\"Filter_filter__vxThR\"};","export const selectFilter = ({ filter }) => filter;\n","import { useSelector, useDispatch } from 'react-redux';\n\nimport styles from './Filter.module.css';\n\nimport { setFilter } from 'redux/filter/filterSlice';\nimport { selectFilter } from 'redux/filter/filterSelectors';\n\nexport const Filter = () => {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const handleFilter = e => {\n    const action = setFilter(e.target.value);\n    dispatch(action);\n  };\n\n  return (\n    <label className={styles.filter}>\n      Find contacts\n      <input type=\"text\" value={filter} onChange={handleFilter} />\n    </label>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"listItem\":\"ContactListItem_listItem__EkNJN\",\"button\":\"ContactListItem_button__QAzGk\"};","import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\n\nimport { fetchDeleteContact } from 'redux/contacts/contactsOperations';\n\nimport styles from './ContactListItem.module.css';\n\nexport const ContactListItem = ({ nameId, name, phone }) => {\n  const dispatch = useDispatch();\n\n  const handleDeleteContact = id => {\n    const action = fetchDeleteContact(id);\n    dispatch(action);\n  };\n\n  return (\n    <li className={styles.listItem}>\n      <span>{name}:</span>\n      <span>{phone}</span>\n      <button\n        className={styles.button}\n        onClick={() => handleDeleteContact(nameId)}\n        type=\"button\"\n      >\n        Delete\n      </button>\n    </li>\n  );\n};\n\nContactListItem.propTypes = {\n  nameId: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  phone: PropTypes.string.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {};","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { ContactListItem } from './ContactListItem/ContactListItem';\n\nimport { fetchAllContacts } from 'redux/contacts/contactsOperations';\nimport { selectFilteredContacts } from 'redux/contacts/contactsSelectors';\n\nimport styles from './ContactList.module.css';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchAllContacts());\n  }, [dispatch]);\n\n  const list = useSelector(selectFilteredContacts);\n\n  return (\n    <ul className={styles.ul}>\n      {list.map(({ id, name, phone }) => {\n        return (\n          <ContactListItem key={id} name={name} phone={phone} nameId={id} />\n        );\n      })}\n    </ul>\n  );\n};\n","import { useSelector } from 'react-redux';\n\nimport { selectLoadingContacts } from 'redux/contacts/contactsSelectors';\n\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { Filter } from 'components/Filter/Filter';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Loader } from 'components/Loader/Loader';\n\nconst ContactsPage = () => {\n  const loading = useSelector(selectLoadingContacts);\n\n  if (loading) {\n    return <Loader />;\n  }\n  return (\n    <div>\n      <p>Contacts</p>\n      <ContactForm />\n      <Filter />\n      <ContactList />\n    </div>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["selectFilteredContacts","contacts","filter","items","normalizedFilter","toLowerCase","name","includes","selectLoadingContacts","isLoading","ContactForm","inputValues","number","useSelector","store","dispatch","useDispatch","onChangingInput","e","objectKey","target","value","className","styles","onSubmit","preventDefault","data","find","contact","alert","phone","action","fetchAddContact","handleAddContact","elements","clearForm","onChange","type","pattern","title","required","selectFilter","Filter","setFilter","ContactListItem","nameId","onClick","id","fetchDeleteContact","handleDeleteContact","ContactList","useEffect","fetchAllContacts","list","map","Loader"],"sourceRoot":""}