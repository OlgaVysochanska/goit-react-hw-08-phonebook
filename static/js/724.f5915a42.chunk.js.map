{"version":3,"file":"static/js/724.f5915a42.chunk.js","mappings":"wQAAaA,EAAe,CAC1BC,MAAO,GACPC,SAAU,ICFCC,EACJ,CACLC,KAAM,QACNC,KAAM,QACNC,UAAU,EACVC,YAAa,oBALJJ,EAOD,CACRC,KAAM,WACNC,KAAM,WACNC,UAAU,EACVC,YAAa,uB,mBCJJC,EAAY,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC1B,GAA0BC,EAAAA,EAAAA,WAAS,UAAKV,IAAxC,eAAOW,EAAP,KAAcC,EAAd,KAEMC,GAAeC,EAAAA,EAAAA,cACnB,YAAiB,IAAdC,EAAa,EAAbA,OACOV,EAAgBU,EAAhBV,KAAMW,EAAUD,EAAVC,MACdJ,GAAS,SAAAK,GACP,OAAO,kBAAKA,GAAZ,cAAwBZ,EAAOW,GAChC,GACF,GACD,CAACJ,IASKX,EAAoBU,EAApBV,MAAOC,EAAaS,EAAbT,SAEf,OACE,kBAAMO,SATa,SAAAS,GACnBA,EAAEC,iBACFV,GAAS,UAAKE,IACdC,GAAS,UAAKZ,GACf,EAK+BoB,UAAWC,EAAAA,EAAAA,KAAzC,WACE,mBAAOD,UAAWC,EAAAA,EAAAA,MAAlB,mBAEE,0BACED,UAAWC,EAAAA,EAAAA,MACXL,MAAOf,EACPqB,SAAUT,GACNV,QAGR,mBAAOiB,UAAWC,EAAAA,EAAAA,MAAlB,sBAEE,0BACED,UAAWC,EAAAA,EAAAA,MACXL,MAAOd,EACPoB,SAAUT,GACNV,QAGR,mBAAQiB,UAAWC,EAAAA,EAAAA,OAAejB,KAAK,SAAvC,sBAKL,EC1BD,EAnBkB,WAChB,IAAMmB,GAAUC,EAAAA,EAAAA,IAAYC,EAAAA,IACtBC,GAAWC,EAAAA,EAAAA,MAOjB,OAAIJ,GACK,SAAC,KAAD,CAAUK,GAAG,eAGpB,0BACE,SAACpB,EAAD,CAAWC,SAVM,SAAAoB,GACnBC,QAAQC,IAAI,eAAgBF,GAC5BH,GAASM,EAAAA,EAAAA,IAAMH,GAChB,KAUF,C,qBCxBD,KAAgB,KAAO,2BAA2B,MAAQ,4BAA4B,MAAQ,4BAA4B,OAAS,6B","sources":["components/LoginForm/initialState.js","components/LoginForm/fields.js","components/LoginForm/LoginForm.jsx","pages/LoginPage/LoginPage.jsx","webpack://react-homework-template/./src/components/RegisterForm/RegisterForm.module.css?a5d4"],"sourcesContent":["export const initialState = {\n  email: '',\n  password: '',\n};\n","export const fields = {\n  email: {\n    type: 'email',\n    name: 'email',\n    required: true,\n    placeholder: 'Enter your email',\n  },\n  password: {\n    type: 'password',\n    name: 'password',\n    required: true,\n    placeholder: 'Enter your password',\n  },\n};\n","import { useState, useCallback } from 'react';\n\nimport { initialState } from './initialState';\nimport { fields } from './fields';\n\nimport styles from 'components/RegisterForm/RegisterForm.module.css';\n\nexport const LoginForm = ({ onSubmit }) => {\n  const [state, setState] = useState({ ...initialState });\n\n  const handleChange = useCallback(\n    ({ target }) => {\n      const { name, value } = target;\n      setState(prevState => {\n        return { ...prevState, [name]: value };\n      });\n    },\n    [setState]\n  );\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit({ ...state });\n    setState({ ...initialState });\n  };\n\n  const { email, password } = state;\n\n  return (\n    <form onSubmit={handleSubmit} className={styles.form}>\n      <label className={styles.label}>\n        Email\n        <input\n          className={styles.input}\n          value={email}\n          onChange={handleChange}\n          {...fields.email}\n        />\n      </label>\n      <label className={styles.label}>\n        Password\n        <input\n          className={styles.input}\n          value={password}\n          onChange={handleChange}\n          {...fields.password}\n        />\n      </label>\n      <button className={styles.button} type=\"submit\">\n        Log in\n      </button>\n    </form>\n  );\n};\n","import { useSelector, useDispatch } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\n\nimport { login } from 'redux/auth/authOperations';\nimport { isUserLogin } from 'redux/auth/authSelectors';\n\nimport { LoginForm } from 'components/LoginForm/LoginForm';\n\nconst LoginPage = () => {\n  const isLogin = useSelector(isUserLogin);\n  const dispatch = useDispatch();\n\n  const handleSignup = data => {\n    console.log('handle login', data);\n    dispatch(login(data));\n  };\n\n  if (isLogin) {\n    return <Navigate to=\"/contacts\" />;\n  }\n  return (\n    <div>\n      <LoginForm onSubmit={handleSignup} />\n    </div>\n  );\n};\n\nexport default LoginPage;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"RegisterForm_form__Tv43W\",\"label\":\"RegisterForm_label__4pTXF\",\"input\":\"RegisterForm_input__FsgBz\",\"button\":\"RegisterForm_button__B3hFq\"};"],"names":["initialState","email","password","fields","type","name","required","placeholder","LoginForm","onSubmit","useState","state","setState","handleChange","useCallback","target","value","prevState","e","preventDefault","className","styles","onChange","isLogin","useSelector","isUserLogin","dispatch","useDispatch","to","data","console","log","login"],"sourceRoot":""}