{"version":3,"file":"static/js/807.1577ff5a.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","redux/filter/filterSelectors.js","components/Filter/Filter.jsx","redux/contacts/contactsSelectors.js","webpack://react-homework-template/./src/components/ContactList/ContactListItem/ContactListItem.module.css?fe27","components/ContactList/ContactListItem/ContactListItem.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"inputBlock\":\"ContactForm_inputBlock__exhII\",\"input\":\"ContactForm_input__Bl93P\",\"button\":\"ContactForm_button__eSwX9\"};","import { useSelector, useDispatch } from 'react-redux';\nimport styles from './ContactForm.module.css';\n\nimport { fetchAddContact } from 'redux/contacts/contactsOperations';\n\nexport const ContactForm = () => {\n  let inputValues = {\n    name: '',\n    number: '',\n  };\n\n  const contacts = useSelector(store => store.contacts.items);\n  const dispatch = useDispatch();\n\n  const onChangingInput = e => {\n    const objectKey = e.target.name;\n    inputValues[objectKey] = e.target.value;\n    return;\n  };\n\n  const handleAddContact = data => {\n    const name = data.name;\n    if (contacts.find(contact => contact.name === name)) {\n      alert(`${name} is already in contacts`);\n      return;\n    }\n\n    const number = data.number;\n    const action = fetchAddContact({ name, number });\n    dispatch(action);\n  };\n\n  const clearForm = e => {\n    e.target.elements.name.value = '';\n    e.target.elements.number.value = '';\n  };\n\n  return (\n    <form\n      className={styles.form}\n      onSubmit={e => {\n        e.preventDefault();\n        handleAddContact(inputValues);\n        clearForm(e);\n      }}\n    >\n      <label className={styles.inputBlock}>\n        Name\n        <input\n          onChange={onChangingInput}\n          className={styles.input}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n      <label className={styles.inputBlock}>\n        Number\n        <input\n          onChange={onChangingInput}\n          className={styles.input}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </label>\n      <button className={styles.button} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"filter\":\"Filter_filter__vxThR\"};","export const selectFilter = ({ filter }) => filter;\n","import { useSelector, useDispatch } from 'react-redux';\n\nimport styles from './Filter.module.css';\n\nimport { setFilter } from 'redux/filter/filterSlice';\nimport { selectFilter } from 'redux/filter/filterSelectors';\n\nexport const Filter = () => {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const handleFilter = e => {\n    const action = setFilter(e.target.value);\n    dispatch(action);\n  };\n\n  return (\n    <label className={styles.filter}>\n      Find contact\n      <input type=\"text\" value={filter} onChange={handleFilter} />\n    </label>\n  );\n};\n","export const selectAllContacts = ({ contacts }) => contacts.items;\n\nexport const selectFilteredContacts = ({ contacts, filter }) => {\n  if (!filter) {\n    return contacts.items;\n  }\n\n  const normalizedFilter = filter.toLowerCase();\n  const result = contacts.items.filter(({ name }) => {\n    return name.toLowerCase().includes(normalizedFilter);\n  });\n\n  return result;\n};\n\nexport const selectLoadingContacts = ({ contacts }) => contacts.isLoading;\n","// extracted by mini-css-extract-plugin\nexport default {\"listItem\":\"ContactListItem_listItem__EkNJN\",\"button\":\"ContactListItem_button__QAzGk\",\"contactInfo\":\"ContactListItem_contactInfo__kRg44\",\"name\":\"ContactListItem_name__WEl2o\",\"number\":\"ContactListItem_number__vdoo4\"};","import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\n\nimport { fetchDeleteContact } from 'redux/contacts/contactsOperations';\n\nimport styles from './ContactListItem.module.css';\n\nexport const ContactListItem = ({ nameId, name, number }) => {\n  const dispatch = useDispatch();\n\n  const handleDeleteContact = id => {\n    const action = fetchDeleteContact(id);\n    dispatch(action);\n  };\n\n  return (\n    <li className={styles.listItem}>\n      <div className={styles.contactInfo}>\n        <span className={styles.name}>{name}:</span>\n        <span className={styles.number}>{number}</span>\n      </div>\n      <button\n        className={styles.button}\n        onClick={() => handleDeleteContact(nameId)}\n        type=\"button\"\n      >\n        Delete\n      </button>\n    </li>\n  );\n};\n\nContactListItem.propTypes = {\n  nameId: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"contactList\":\"ContactList_contactList__UFVCg\",\"text\":\"ContactList_text__+NWAW\"};","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { selectLoadingContacts } from 'redux/contacts/contactsSelectors';\n\nimport { ContactListItem } from './ContactListItem/ContactListItem';\nimport { Loader } from 'components/Loader/Loader';\n\nimport { fetchAllContacts } from 'redux/contacts/contactsOperations';\nimport { selectFilteredContacts } from 'redux/contacts/contactsSelectors';\n\nimport styles from './ContactList.module.css';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchAllContacts());\n  }, [dispatch]);\n\n  const list = useSelector(selectFilteredContacts);\n  const isContacts = Boolean(list.length);\n\n  const loading = useSelector(selectLoadingContacts);\n\n  if (loading) {\n    return <Loader />;\n  }\n\n  return (\n    <div className={styles.contactList}>\n      {isContacts && (\n        <ul className={styles.ul}>\n          {list.map(({ id, name, number }) => {\n            return (\n              <ContactListItem\n                key={id}\n                name={name}\n                number={number}\n                nameId={id}\n              />\n            );\n          })}\n        </ul>\n      )}\n      {!isContacts && <p className={styles.text}>There are no contacts!</p>}\n    </div>\n  );\n};\n","import { ContactForm } from 'components/ContactForm/ContactForm';\nimport { Filter } from 'components/Filter/Filter';\nimport { ContactList } from 'components/ContactList/ContactList';\n\nconst ContactsPage = () => {\n  return (\n    <div>\n      <ContactForm />\n      <Filter />\n      <ContactList />\n    </div>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["ContactForm","inputValues","name","number","contacts","useSelector","store","items","dispatch","useDispatch","onChangingInput","e","objectKey","target","value","className","styles","onSubmit","preventDefault","data","find","contact","alert","action","fetchAddContact","handleAddContact","elements","clearForm","onChange","type","pattern","title","required","selectFilter","filter","Filter","setFilter","selectFilteredContacts","normalizedFilter","toLowerCase","includes","selectLoadingContacts","isLoading","ContactListItem","nameId","onClick","id","fetchDeleteContact","handleDeleteContact","ContactList","useEffect","fetchAllContacts","list","isContacts","Boolean","length","Loader","map"],"sourceRoot":""}